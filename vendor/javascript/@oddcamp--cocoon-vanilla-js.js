// @oddcamp/cocoon-vanilla-js@1.1.3 downloaded from https://ga.jspm.io/npm:@oddcamp/cocoon-vanilla-js@1.1.3/index.js

let e=0;const create_new_id=function(){return(new Date).getTime()+e++};const newcontent_braced=function(e){return"["+e+"]$1"};const newcontent_underscord=function(e){return"_"+e+"_$1"};const getInsertionNodeElem=function(e,t,n){if(!e)return n.parentNode;if("function"===typeof e){t&&console.warn("association-insertion-traversal is ignored, because association-insertion-node is given as a function.");return e(n)}if("string"==typeof e){if(!t)return"this"==e?n:document.querySelector(e);{const o={prev:"previousElementSibling",next:"nextElementSibling"}[t];if(o){const t=n[o].closest(e);if(t===n[o])return t}else{if("closest"==t)return n.closest(e);console.warn("The provided association-insertion-traversal is not supported")}}}};const addFieldsHandler=e=>{const t=e.getAttribute("data-association");const n=e.getAttribute("data-associations");const o=e.getAttribute("data-association-insertion-template");const s=e.getAttribute("data-association-insertion-node");const a=e.getAttribute("data-association-insertion-traversal");let i=e.getAttribute("data-association-insertion-method")||e.getAttribute("data-association-insertion-position")||"before";let r=create_new_id();let c=parseInt(e.getAttribute("data-count"),10);let d=new RegExp("\\[new_"+t+"\\](.*?\\s)","g");let l=new RegExp("_new_"+t+"_(\\w*)","g");let u=o.replace(d,newcontent_braced(r));let f=[];if(u==o){d=new RegExp("\\[new_"+n+"\\](.*?\\s)","g");l=new RegExp("_new_"+n+"_(\\w*)","g");u=o.replace(d,newcontent_braced(r))}u=u.replace(l,newcontent_underscord(r));f=[u];c=isNaN(c)?1:Math.max(c,1);c-=1;while(c){r=create_new_id();u=o.replace(d,newcontent_braced(r));u=u.replace(l,newcontent_underscord(r));f.push(u);c-=1}const p=getInsertionNodeElem(s,a,e);p&&0!=p.length||console.warn("Couldn't find the element to insert the template. Make sure your `data-association-insertion-*` on `link_to_add_association` is correct.");f.forEach((e=>{const t=new CustomEvent("cocoon:before-insert",{detail:e,bubbles:true,cancelable:true});p.dispatchEvent(t);if(!t.defaultPrevented){switch(i){default:case"before":i="beforebegin";break;case"after":i="afterend";break;case"append":i="beforeend";break;case"prepend":i="afterbegin";break}p.insertAdjacentHTML(i,e);p.dispatchEvent(new CustomEvent("cocoon:after-insert",{detail:e,bubbles:true,cancelable:true}))}}))};document.addEventListener("click",(e=>{if(e.target.closest(".add_fields")){e.preventDefault();e.stopPropagation();addFieldsHandler(e.target.closest(".add_fields"))}}));const removeFieldsHandler=e=>{const t=e.getAttribute("data-wrapper-class")||"nested-fields";const n=e.closest(`.${t}`);const o=n.parentNode;const s=new CustomEvent("cocoon:before-remove",{detail:n,bubbles:true,cancelable:true});o.dispatchEvent(s);if(!s.defaultPrevented){const t=o.getAttribute("data-remove-timeout")||0;setTimeout((()=>{if(e.classList.contains("dynamic"))n.parentNode.removeChild(n);else{const e=n.querySelector('input[type=hidden][name*="[_destroy]"');e&&(e.value=1);n.style.display="none"}o.dispatchEvent(new CustomEvent("cocoon:after-remove",{detail:n,bubbles:true,cancelable:true}))}),t)}};document.addEventListener("click",(e=>{const t=e.target.closest(".remove_fields.dynamic")||e.target.closest(".remove_fields.existing");if(t){e.preventDefault();e.stopPropagation();removeFieldsHandler(t)}}));const hideFields=()=>{Array.from(document.querySelectorAll(".remove_fields.existing.destroyed")).forEach((e=>{const t=e.getAttribute("data-wrapper-class")||"nested-fields";e.closest(`.${t}`).style.display="none"}))};document.addEventListener("DOMContentLoaded",hideFields);document.addEventListener("turbolinks:load",hideFields);document.addEventListener("page:load",hideFields);var t={};export{t as default};

